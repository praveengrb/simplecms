@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "s.praveen.cms.service.impl.CourseRegistartionServiceImpl",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_321882441 { 
   	label=praveen
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1915834990 { 
   	label=cms
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AssignmentMgmtController1177992531[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentMgmtController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   assignmentMgmtService: IAssignmentMgmtService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createAssignment(request: AssignmentRequest): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAssignment(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentById(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentByStudentId(studentId: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ submitAssignment(request: SubmitAssignmentRequest): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateRequest(id: long, request: AssignmentRequest): ResponseEntity&lt;Object&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentMgmtServiceImpl105350576[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentMgmtServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   assignmentRepository: IAssignmentRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseMgmtService: ICourseMgmtService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   mappingTableService: MappingTableServiceImpl [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(request: AssignmentRequest): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAssignment(id: long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentById(id: long): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentByStudentId(studentId: long): List&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ submitAssignment(request: SubmitAssignmentRequest): MappingTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateAssignmentById(id: long, request: AssignmentRequest): Assignment</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseMgmtController1177992531[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseMgmtController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCourseMgmtService: ICourseMgmtService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createCourse(request: CourseRequest): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteCourseById(id: long): ResponseEntity</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseById(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCoursesByStudentId(studentId: long): ResponseEntity&lt;List&lt;Course&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerCourse(course_id: long, student_id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateCourseById(id: long, request: CourseRequest): ResponseEntity&lt;Object&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseMgmtServiceImpl105350576[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseMgmtServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseRegistartionService: CourseRegistartionServiceImpl [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   courseRepository: ICourseRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentMgmtService: IStudentMgmtService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCourse(request: CourseRequest): Course</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteCourseById(id: long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseById(id: long): Course</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCoursesByStudentId(studentId: long): List&lt;Course&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerCourse(courseId: long, studentId: long): CourseRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateCourseById(id: long, request: CourseRequest): Course</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRegistartionServiceImpl105350576[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRegistartionServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseRegistrationRepository: ICourseRegistrationRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   courseRepository: ICourseRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCourseIdsByStudentId(studentId: long): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentIdsByCourseId(courseId: long): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registerCourse(id: CSId, course: Course, student: Student): CourseRegistration</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentMgmtController1177992531[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentMgmtController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   studentMgmtService: IStudentMgmtService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStudent(request: StudentRequest): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteStudentById(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentById(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentsByCourseId(courseId: long): ResponseEntity</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateStudentById(id: long, request: StudentRequest): ResponseEntity&lt;Object&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentMgmtServiceImpl105350576[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentMgmtServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseRegistartionService: CourseRegistartionServiceImpl [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentRepository: IStudentRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStudent(request: StudentRequest): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteStudent(id: long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentsByCourseId(id: long): List&lt;Student&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectStudentById(id: long): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateStudent(id: long, request: StudentRequest): Student</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserMgmtController1177992531[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserMgmtController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userMgmtService: IUserMgmtService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createUser(request: UserRequest): ResponseEntity&lt;User&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteRequest(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectAllRequest(): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectRequestById(id: long): ResponseEntity&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateRequest(id: long, request: UserRequest): ResponseEntity&lt;Object&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserMgmtServiceImpl105350576[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserMgmtServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   userRepository: IUserRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addUser(request: UserRequest): User</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteUserById(id: long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserById(id: long): User</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateUserById(id: long, request: UserRequest): User</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AssignmentMgmtController1177992531 -> AssignmentMgmtServiceImpl105350576[label="assignmentMgmtService
[1]", arrowhead=none];
AssignmentMgmtServiceImpl105350576 -> StudentMgmtServiceImpl105350576[label="iCourseMgmtService
[1]", arrowhead=none];
CourseMgmtController1177992531 -> StudentMgmtServiceImpl105350576[label="iCourseMgmtService
[1]", arrowhead=none];
CourseMgmtServiceImpl105350576 -> CourseRegistartionServiceImpl105350576[label="courseRegistartionService
[1]"];
StudentMgmtController1177992531 -> StudentMgmtServiceImpl105350576[label="studentMgmtService
[1]", arrowhead=none];
StudentMgmtServiceImpl105350576 -> CourseMgmtServiceImpl105350576[arrowhead=none];
StudentMgmtServiceImpl105350576 -> CourseRegistartionServiceImpl105350576[label="courseRegistartionService
[1]"];
StudentMgmtServiceImpl105350576 -> UserMgmtServiceImpl105350576[arrowhead=none];
UserMgmtController1177992531 -> StudentMgmtServiceImpl105350576[label="userMgmtService
[1]", arrowhead=none];
    
}
@enduml